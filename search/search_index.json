{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sculk","text":"<p>Sculk is a Fabric mod for Minecraft that adds a custom-made programming language.</p> <ul> <li>Added Gamerules</li> <li>Casting</li> <li>Creating a Sculk Datapack</li> <li>Custom Content</li> <li>Events</li> <li>Examples</li> <li>Import Statement</li> <li>Variable Declarations</li> <li>Writing Data to Entities</li> </ul>"},{"location":"added_gamerules/","title":"Added Gamerules","text":""},{"location":"added_gamerules/#maxargumentcount","title":"maxArgumentCount","text":"<p>This gamerule controls the max amount of arguments in functions and methods.</p>"},{"location":"added_gamerules/#maxloops","title":"maxLoops","text":"<p>This gamerule controls the max amount of loops a for/while/foreach loop can iterate.</p>"},{"location":"casting/","title":"Casting","text":"<p>Casting types is a fundamental part of statically typed programming languages.</p>"},{"location":"casting/#upcasting","title":"Upcasting","text":"<pre><code>class Base {}\n\nclass Super extends Base {}\n\nvar x: Base = Super();\n\nprint(type(x)); // Base (not Super!)\n</code></pre>"},{"location":"casting/#downcasting","title":"Downcasting","text":"<pre><code>class Base {}\n\nclass Super extends Base {}\n\nvar x: Base = Super();\n\nvar y = (Super) x;\n\nprint(type(y)); // Super\n</code></pre>"},{"location":"creating_a_sculk_datapack/","title":"Creating a Sculk Datapack","text":"<p>Sculk datapacks are like regular datapacks with minor differences.</p> <p>The folder structure looks like this</p> <pre><code>Datapack Name/\n    data/\n        sculk/\n            tags/\n                scripts/\n                    load.json\n                    tick.json\n                    start.json\n        namespace/\n            scripts/\n                load.sk\n                tick.sk\n                start.sk\n    pack.mcmeta\n</code></pre> <p>A new kind of script tag is added: <code>start</code>. This only gets executed on world load and not every <code>/reload</code> like <code>load</code> does. This is mainly used for registering items &amp; blocks. More information about that can be found here.</p>"},{"location":"custom_content/","title":"Custom Content","text":"<p>Adding custom content is the main part of datapacks in my opinion. In Beta 0.0.5 Sculk adds support for custom blocks &amp; items.</p> <p>Custom content always has to be registered in the <code>start</code> tag.</p>"},{"location":"custom_content/#blocks","title":"Blocks","text":"<p>In this example, we will be adding a calcite brick, similar to stone bricks but calcite.</p>"},{"location":"custom_content/#registering-the-block","title":"Registering the Block","text":"<p>In your <code>start</code> script add the following.</p> start.sk<pre><code>var brickSettings = BlockSettings.of(Blocks.get(\"stone_bricks\")); // Copy the settings of stone bricks\n\n// If you want an item to be registered too, use registerWithItem otherwise just use register\nBlocks.registerWithItem(Block(\"calcite_bricks\", brickSettings));\n</code></pre> <p>There are a few settings you can tweak to customize your block. They are listed below:</p>"},{"location":"custom_content/#hardness","title":"hardness","text":"<p><code>hardness</code> determines the breaking speed of the block.</p>"},{"location":"custom_content/#resistance","title":"resistance","text":"<p><code>resistance</code> determines the blast resistance of the block.</p>"},{"location":"custom_content/#collidable","title":"collidable","text":"<p><code>collidable</code> determines whether the block has a hitbox / is collidable with entities.</p>"},{"location":"custom_content/#luminance","title":"luminance","text":"<p><code>luminance</code> determines the light level that  the block emits.</p>"},{"location":"custom_content/#slipperiness","title":"slipperiness","text":"<p><code>slipperiness</code> determines the slipperiness of the block.</p>"},{"location":"custom_content/#burnable","title":"burnable","text":"<p><code>burnable</code> determines whether the block is burnable.</p>"},{"location":"custom_content/#pistonbehavior","title":"pistonBehavior","text":"<p><code>pistonBehavior</code> determines what the block will do when a piston tries to push it.</p>"},{"location":"custom_content/#normal","title":"NORMAL","text":"<p>The block will get pushed.</p>"},{"location":"custom_content/#destroy","title":"DESTROY","text":"<p>The block will get destroyed.</p>"},{"location":"custom_content/#block","title":"BLOCK","text":"<p>The block will not get pushed.</p>"},{"location":"custom_content/#ignore","title":"IGNORE","text":"<p>No noticeable difference to <code>BLOCK</code> while testing.</p>"},{"location":"custom_content/#push_only","title":"PUSH_ONLY","text":"<p>The block will only be able to get pushed and not pulled even with a sticky piston.</p>"},{"location":"custom_content/#hasblockbreakparticles","title":"hasBlockBreakParticles","text":"<p><code>hasBlockBreakParticles</code> determines whether the block will spawn particles when broken.</p>"},{"location":"custom_content/#instrument","title":"instrument","text":"<p><code>instrument</code> determines what instrument a noteblock will play.</p>"},{"location":"custom_content/#requirestool","title":"requiresTool","text":"<p><code>requiresTool</code> determines whether the block requires a tool to drop loot.</p>"},{"location":"custom_content/#adding-a-loot-table","title":"Adding a Loot Table","text":"<p>In <code>Datapack Name/data/namespace/loot_tables/blocks</code>, create a file named <code>&lt;block id&gt;.json</code>.</p> calcite_bricks.json<pre><code>{\n    \"type\": \"minecraft:block\",\n    \"pools\": [\n        {\n            \"bonus_rolls\": 0.0,\n            \"conditions\": [\n                {\n                    \"condition\": \"minecraft:survives_explosion\"\n                }\n            ],\n            \"entries\": [\n                {\n                    \"type\": \"minecraft:item\",\n                    \"name\": \"useful_calcite:calcite_bricks\"\n                }\n            ],\n            \"rolls\": 1.0\n        }\n    ]\n}\n</code></pre>"},{"location":"custom_content/#making-a-pickaxe-required-to-drop-loot","title":"Making a Pickaxe Required to Drop Loot","text":"<p>To make the block break faster with a certain tool, create a file in <code>Datapack Name/data/minecraft/tags/blocks/mineable/&lt;tool&gt;.json</code> where <code>&lt;tool&gt;</code> is one of the following: <code>pickaxe</code>, <code>axe</code>, <code>shovel</code>, <code>sword</code>.</p> pickaxe.json<pre><code>{\n    \"replace\": false,\n    \"values\": [\n        \"useful_calcite:calcite_bricks\"\n    ]\n}\n</code></pre>"},{"location":"custom_content/#creating-the-resourcepack","title":"Creating the Resourcepack","text":""},{"location":"custom_content/#creating-the-blockstates","title":"Creating the Blockstates","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/blockstates</code> create a file named <code>&lt;block id&gt;.json</code>.</p> calcite_bricks.json<pre><code>{\n  \"variants\": {\n      \"\": {\n          \"model\": \"useful_calcite:block/calcite_bricks\"\n      }\n  }\n}\n</code></pre> <p>Currently, blockstates are not supported but may in the future.</p>"},{"location":"custom_content/#creating-the-language-file","title":"Creating the Language File","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/lang</code> create a file named <code>en_us.json</code>. You can replace <code>en_us</code> with any other language you want.</p> en_us.json<pre><code>{\n  \"item.useful_calcite.calcite_bricks\": \"Calcite Bricks\",\n  \"block.useful_calcite.calcite_bricks\": \"Calcite Bricks\"\n}\n</code></pre>"},{"location":"custom_content/#creating-the-item-block-models","title":"Creating the Item &amp; Block Models","text":""},{"location":"custom_content/#the-block-model","title":"The Block Model","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/models/block</code> create a file named <code>&lt;block id&gt;.json</code>.</p> calcite_bricks.json<pre><code>{\n  \"parent\": \"minecraft:block/cube_all\",\n  \"textures\": {\n    \"all\": \"useful_calcite:block/calcite_bricks\"\n  }\n}\n</code></pre> <p>You can use Blockbench for more complex models.</p>"},{"location":"custom_content/#the-item-model","title":"The Item Model","text":"<p>If you didn't use <code>registerWithItem</code> you can skip this step.</p> <p>In <code>Resourcepack Name/assets/datapack_namespace/models/item</code> create a file named <code>&lt;block id&gt;.json</code>.</p> calcite_bricks.json<pre><code>{\n  \"parent\": \"useful_calcite:block/calcite_bricks\"\n}\n</code></pre>"},{"location":"custom_content/#adding-textures","title":"Adding Textures","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/textures/block</code> add your block texture in the format <code>&lt;block id&gt;.png</code>.</p>"},{"location":"custom_content/#items","title":"Items","text":""},{"location":"custom_content/#registering-the-item","title":"Registering the Item","text":"<p>In your <code>start</code> script add the following.</p> start.sk<pre><code>var itemSettings = ItemSettings();\n\nItems.register(Item(\"my_item\", itemSettings));\n</code></pre> <p>There are a few settings you can tweak to customize your item. They are listed below:</p>"},{"location":"custom_content/#maxcount","title":"maxCount","text":"<p>The max amount of items in a stack. Cannot be above 64.</p>"},{"location":"custom_content/#maxdamage","title":"maxDamage","text":"<p>The max amount of the damage the item can take before it breaks. <code>maxCount</code> has to be 1.</p>"},{"location":"custom_content/#fireproof","title":"fireproof","text":"<p>Whether the item is immune to lava.</p>"},{"location":"custom_content/#creating-the-resourcepack_1","title":"Creating the Resourcepack","text":""},{"location":"custom_content/#the-item-model_1","title":"The Item Model","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/models/item</code> create a file named <code>&lt;item id&gt;.json</code>.</p> item_id.json<pre><code>{\n  \"parent\": \"minecraft:item/generated\",\n  \"textures\": {\n    \"layer0\": \"useful_calcite:item/my_item\"\n  }\n}\n</code></pre>"},{"location":"custom_content/#adding-textures_1","title":"Adding Textures","text":"<p>In <code>Resourcepack Name/assets/datapack_namespace/textures/item</code> add your item texture in the format <code>&lt;item id&gt;.png</code>.</p>"},{"location":"custom_content/#make-a-pull-request-if-you-have-any-suggestions-to-make-this-better","title":"Make a pull request if you have any suggestions to make this better","text":""},{"location":"events/","title":"Events","text":"<p>Events are listeners for things to happen in the world and call a function when they do.</p>"},{"location":"events/#place-block-event","title":"Place Block Event","text":"<p>Occurs when a living entity places a block.</p> <p>This event is not cancellable.</p> <pre><code>Events.onPlaceBlock(function(entity: LivingEntity, block: Block) -&gt; Null {\n\n});\n</code></pre>"},{"location":"events/#attack-entity-event","title":"Attack Entity Event","text":"<p>Occurs when a player attacks an entity.</p> <p>This event is cancellable.</p> <pre><code>Events.onAttackEntity(function(player: PlayerEntity, target: Entity, weapon: ItemStack) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#break-block-event","title":"Break Block Event","text":"<p>Occurs when a player breaks a block.</p> <p>This event is cancellable.</p> <pre><code>Events.onBreakBlock(function(player: PlayerEntity, pos: BlockPos, block_broken: Block) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#craft-item-event","title":"Craft Item Event","text":"<p>Occurs when a player crafts an item.</p> <p>This event is not cancellable.</p> <pre><code>Events.onCraftItem(function(player: PlayerEntity, item_crafted: ItemStack) -&gt; Null {\n\n});\n</code></pre>"},{"location":"events/#drop-item-event","title":"Drop Item Event","text":"<p>Occurs when a player drops an item.</p> <p>This event is not cancellable.</p> <pre><code>Events.onDropItem(function(player: PlayerEntity, item_dropped: ItemStack) -&gt; Null {\n\n});\n</code></pre>"},{"location":"events/#jump-event","title":"Jump Event","text":"<p>Occurs when a player jumps.</p> <p>This event is not cancellable.</p> <pre><code>Events.onJump(function(player: PlayerEntity) -&gt; Null {\n\n});\n</code></pre>"},{"location":"events/#pickup-item-event","title":"Pickup Item Event","text":"<p>Occurs when a player picks up an item.</p> <p>This event is cancellable.</p> <pre><code>Events.onPickupItem(function(player: PlayerEntity, item_picked_up: ItemStack) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#entity-sleep-event","title":"Entity Sleep Event","text":"<p>Occurs when an entity sleeps.</p> <p>This event is not cancellable.</p> <pre><code>Events.onEntitySleep(function(entity: LivingEntity) -&gt; Null {\n\n});\n</code></pre>"},{"location":"events/#right-click-item-event","title":"Right Click Item Event","text":"<p>Occurs when a player uses an item.</p> <p>This event is cancellable.</p> <pre><code>Events.onRightClickItem(function(player: PlayerEntity, item_used: ItemStack) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#ring-bell-event","title":"Ring Bell Event","text":"<p>Occurs when a player rings a bell.</p> <p>This event is cancellable.</p> <pre><code>Events.onRingBell(function(player: PlayerEntity) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#send-chat-message-event","title":"Send Chat Message Event","text":"<p>Occurs when a player sends a message in chat.</p> <p>This event is cancellable.</p> <pre><code>Events.onSendChatMessage(function(player: ServerPlayerEntity, message: String) -&gt; Boolean {\n    return true;\n});\n</code></pre>"},{"location":"events/#while-sneaking-event","title":"While Sneaking Event","text":"<p>Occurs when a player is sneaking.</p> <p>This event is not cancellable.</p> <pre><code>Events.whileSneaking(function(player: ServerPlayerEntity) -&gt; Null {\n\n});\n</code></pre>"},{"location":"examples/","title":"Examples","text":""},{"location":"import/","title":"Import Statement","text":"<p>The import statement allows you to use code across multiple files.</p> foo:bar<pre><code>var a = 1;\nvar b = 2;\n</code></pre> foo:load<pre><code>import \"foo:bar\";\n\nprint(a); // 1\nprint(b); // 2\nprint(c); // Error\n</code></pre>"},{"location":"import/#from-statement","title":"From Statement","text":"foo:bar<pre><code>var a = 1;\nvar b = 2;\nvar c = 3;\n</code></pre> foo:load<pre><code>from \"foo:bar\" import a, b;\n\nprint(a); // 1\nprint(b); // 2\nprint(c); // Error\n</code></pre>"},{"location":"switch/","title":"Switch","text":""},{"location":"switch/#switch-statement","title":"Switch Statement","text":"load.sk<pre><code>var x = 1;\n\nswitch (x) {\n    case 1 {\n        print(\"x is one\");\n    }\n    case 2 -&gt; print(\"x is two\");\n    default {\n        print(\"idk\");\n    }\n}\n</code></pre>"},{"location":"switch/#switch-expression","title":"Switch Expression","text":"load.sk<pre><code>var x = 1;\n\nfunction toString(x) -&gt; String {\n    return switch (x) {\n        case 1 -&gt; \"one\";\n        case 2 -&gt; \"two\";\n        case 3 {\n            print(\"x is three\");\n\n            yield \"three\";\n        }\n        default -&gt; \"idk\";\n    };\n}\n\nprint(toString(x)); // one\n</code></pre>"},{"location":"variable_declaration/","title":"Variable Declaration","text":""},{"location":"variable_declaration/#declaring-a-variable","title":"Declaring a Variable","text":""},{"location":"variable_declaration/#with-a-value","title":"With a Value","text":"<pre><code>var x: Integer = 1;\nprint(x); // 1\n</code></pre> <p>The type of a variable can be optionally be ignored.</p> <pre><code>var x = 1;\nprint(x); // 1\n</code></pre>"},{"location":"variable_declaration/#without-a-value","title":"Without a Value","text":"<p>If you don't specify a value, the variable defaults to Null.</p> <pre><code>var x: Integer;\nprint(x); // null\n</code></pre>"},{"location":"variable_declaration/#assigning-a-variable","title":"Assigning a Variable","text":"<pre><code>var x: Integer = 1;\nprint(x); // 1\nx = 2;\nprint(x); // 2\n\nx = \"Invalid type\"; // Error\n</code></pre>"},{"location":"variable_declaration/#declaring-a-function","title":"Declaring a Function","text":""},{"location":"variable_declaration/#block","title":"Block","text":"<pre><code>function add(a: Number, b: Number) -&gt; Number {\n    print(\"Adding\");\n    return a + b;\n}\n\nprint(add(1, 1));     // 2\nprint(add(1.5, 1));   // 2.5\nprint(add(1, 1.5));   // 2.5\nprint(add(1.5, 1.5)); // 3.0\n</code></pre>"},{"location":"variable_declaration/#in-line","title":"In-Line","text":"<pre><code>function add(a: Number, b: Number) -&gt; Number =&gt; a + b;\n\nprint(add(1, 1));     // 2\nprint(add(1.5, 1));   // 2.5\nprint(add(1, 1.5));   // 2.5\nprint(add(1.5, 1.5)); // 3.0\n</code></pre>"},{"location":"variable_declaration/#declaring-a-class","title":"Declaring a Class","text":""},{"location":"variable_declaration/#constructors","title":"Constructors","text":"<pre><code>class Person {\n    function init(name: String, age: Integer) -&gt; Null {\n        print(name + \" is \" + age.toString() + \" years old.\");\n    }\n}\n</code></pre>"},{"location":"variable_declaration/#superclasses","title":"Superclasses","text":"<pre><code>class BaseClass {\n    function baseMethod() -&gt; Null {\n        print(\"Base Method\");\n    }\n}\n\nclass SuperClass extends BaseClass {\n\n}\n\nclass SuperClassOverride extends BaseClass {\n    function baseMethod() -&gt; Null {\n        super.baseMethod(); // Base Method\n        print(\"Super Method\");\n    }\n}\n\nvar baseClass = BaseClass();\nvar superClass = SuperClass();\nvar superClassOverride = SuperClassOverride();\n\nbaseClass.baseMethod(); // Base Method\n\nsuperClass.baseMethod(); // Base Method\n\nsuperClassOverride.baseMethod(); // Base Method &amp; Super Method\n\nprint(BaseClass() instanceof BaseClass); // true\n\nprint(BaseClass() instanceof SuperClass); // false\n\nprint(SuperClass() instanceof BaseClass); // true\n\nprint(SuperClass() instanceof SuperClass); // true\n</code></pre>"},{"location":"variable_declaration/#abstraction","title":"Abstraction","text":"<pre><code>abstract class Person {\n    abstract function getGender() -&gt; String;\n}\n\nclass Male extends Person {\n    function getGender() -&gt; String {\n        return \"Male\";\n    }\n}\n\nvar male = Male();\nprint(male.getGender());\n</code></pre>"},{"location":"variable_declaration/#fields","title":"Fields","text":"<pre><code>class Person {\n    var name: String;\n    var age: Integer;\n\n    function init(name: String, age: Integer) -&gt; Null {\n        this.name = name;\n        this.age = age;\n    }\n}\n</code></pre>"},{"location":"variable_declaration/#methods","title":"Methods","text":"<pre><code>class Calculator {\n    function add(a: Number, b: Number) -&gt; Number {\n        return a + b;\n    }\n}\n\nvar calc = Calculator();\n\nprint(calc.add(1, 1));     // 2\nprint(calc.add(1.5, 1));   // 2.5\nprint(calc.add(1, 1.5));   // 2.5\nprint(calc.add(1.5, 1.5)); // 3.0\n</code></pre>"},{"location":"writing_data_to_entities/","title":"Writing Data to Entities","text":"<p>When reading/writing data to an entity you have to make sure it is an nbt element. That means you can not store custom classes on entities. This code would not work.</p> <pre><code>class Foo {\n\n}\n\nentity[\"my_data\"] = Foo();\n</code></pre>"},{"location":"writing_data_to_entities/#writing-data","title":"Writing Data","text":"<pre><code>entity[\"my_data\"] = 1;\n</code></pre> <p><code>my_data</code> is now stored in the entities nbt in <code>custom_data.my_data</code>.</p>"},{"location":"writing_data_to_entities/#reading-data","title":"Reading Data","text":"<pre><code>entity[\"my_data\"] = 1;\n\nvar my_data = entity[\"my_data\"];\n\nprint(my_data); // 1\n</code></pre>"},{"location":"writing_data_to_entities/#valid-nbt-elements","title":"Valid NBT Elements","text":"<ul> <li><code>Float</code></li> <li><code>Integer</code></li> <li><code>List</code> (Every element has to be the same type)</li> <li><code>String</code></li> <li><code>Dictionary</code></li> </ul> <p>Otherwise you will get the error <code>Type &lt;class type&gt; is not part of Minecraft NBT</code>.</p>"},{"location":"Standard%20Library/Classes/block/","title":"Block","text":"<p>Represents a block.</p>"},{"location":"Standard%20Library/Classes/block/#asitem-item","title":"asItem() -&gt; Item","text":"<p>Returns the block in item form.</p>"},{"location":"Standard%20Library/Classes/block/#getblastresistance-float","title":"getBlastResistance() -&gt; Float","text":"<p>Returns the blast resistance of the block.</p>"},{"location":"Standard%20Library/Classes/block/#getname-string","title":"getName() -&gt; String","text":"<p>Returns the name of the block.</p>"},{"location":"Standard%20Library/Classes/block/#getslipperiness-float","title":"getSlipperiness() -&gt; Float","text":"<p>Returns the slipperiness of the block.</p>"},{"location":"Standard%20Library/Classes/blockhitresult/","title":"BlockHitResult","text":"<p>Represents the result of raycasting.</p>"},{"location":"Standard%20Library/Classes/blockhitresult/#pos-blockpos","title":"pos: BlockPos","text":"<p>The pos where the ray hit.</p>"},{"location":"Standard%20Library/Classes/blockhitresult/#block-block","title":"block: Block","text":"<p>The block where the ray hit.</p>"},{"location":"Standard%20Library/Classes/blockhitresult/#succeeded-boolean","title":"succeeded: Boolean","text":"<p>Whether the raycast was successful.</p>"},{"location":"Standard%20Library/Classes/blockpos/","title":"BlockPos","text":"<p>Represents the position of a block. Each coordinate is integer based.</p>"},{"location":"Standard%20Library/Classes/blockpos/#x-float","title":"x: Float","text":"<p>The x coordinate of the block.</p>"},{"location":"Standard%20Library/Classes/blockpos/#y-float","title":"y: Float","text":"<p>The y coordinate of the block.</p>"},{"location":"Standard%20Library/Classes/blockpos/#z-float","title":"z: Float","text":"<p>The z coordinate of the block.</p>"},{"location":"Standard%20Library/Classes/blocks/","title":"Blocks","text":""},{"location":"Standard%20Library/Classes/blocks/#registerblock-block-block","title":"register(block: Block) -&gt; Block","text":"<p>Registers <code>block</code>. See Registering Blocks for more details.</p>"},{"location":"Standard%20Library/Classes/blocks/#registerwithitemblock-block-block","title":"registerWithItem(block: Block) -&gt; Block","text":"<p>Registers <code>block</code> and an item for the block. See Registering Blocks for more details.</p>"},{"location":"Standard%20Library/Classes/blocks/#getblockid-string-block","title":"get(blockID: String) -&gt; Block","text":"<p>Gets the block from the given ID.</p>"},{"location":"Standard%20Library/Classes/blocksettings/","title":"BlockSettings","text":"<p>See Custom Blocks for block settings.</p>"},{"location":"Standard%20Library/Classes/boolean/","title":"Boolean","text":"<p>Represents a true or false value.</p> <p>Example:</p> <pre><code>var x = true;\n\nif (x) {\n    // will execute because x is true\n}\n</code></pre>"},{"location":"Standard%20Library/Classes/commandresult/","title":"CommandResult","text":"<p>Represents the result of running a command. (Returned from MinecraftServer.runCommand())</p>"},{"location":"Standard%20Library/Classes/commandresult/#result-integer-null","title":"result: Integer | Null","text":"<p>The result of the command. If the command did not succeed the value will default to Null.</p>"},{"location":"Standard%20Library/Classes/commandresult/#succeeded-boolean","title":"succeeded: Boolean","text":"<p>Whether the command succeeded.</p>"},{"location":"Standard%20Library/Classes/commandresult/#errormessage-string-null","title":"errorMessage: String | Null","text":"<p>The error message of the command. If the command succeeded the value will default to Null.</p>"},{"location":"Standard%20Library/Classes/dictionary/","title":"Dictionary","text":"<p>Represents a dictionary.</p> <p>Example:</p> <pre><code>var x = {\n    \"a\": 1,\n    \"b\": 2,\n    \"c\": 3\n};\n\nprint(x[\"a\"]); // 1\nx[\"a\"] = 0;\nprint(x[\"a\"]); // 0\n</code></pre>"},{"location":"Standard%20Library/Classes/entity/","title":"Entity","text":""},{"location":"Standard%20Library/Classes/entity/#addtagtag-string-null","title":"addTag(tag: String) -&gt; Null","text":"<p>Adds the <code>tag</code> tag to the entity. Similar to <code>/tag add</code></p>"},{"location":"Standard%20Library/Classes/entity/#canfreeze-boolean","title":"canFreeze() -&gt; Boolean","text":"<p>Returns whether the entity can freeze.</p>"},{"location":"Standard%20Library/Classes/entity/#canuseportals-boolean","title":"canUsePortals() -&gt; Boolean","text":"<p>Returns whether the entity can use portals.</p>"},{"location":"Standard%20Library/Classes/entity/#dismount-null","title":"dismount() -&gt; Null","text":"<p>Dismounts the entity from any vehicle it's riding.</p>"},{"location":"Standard%20Library/Classes/entity/#extinguishplay_sound-boolean-null","title":"extinguish(play_sound: Boolean) -&gt; Null","text":"<p>Extinguishes the entity. Plays sound if <code>play_sound</code> is true.</p>"},{"location":"Standard%20Library/Classes/entity/#getblockpos-blockpos","title":"getBlockPos() -&gt; BlockPos","text":"<p>Returns the block pos of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getblockx-integer","title":"getBlockX() -&gt; Integer","text":"<p>Returns the x coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getblocky-integer","title":"getBlockY() -&gt; Integer","text":"<p>Returns the y coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getblockz-integer","title":"getBlockZ() -&gt; Integer","text":"<p>Returns the z coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#gettags-liststring","title":"getTags() -&gt; List[String]","text":"<p>Returns the tags on the entity. Similar to <code>/tag list</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#getname-string","title":"getName() -&gt; String","text":"<p>Returns the name of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getpassengers-listentity","title":"getPassengers() -&gt; List[Entity]","text":"<p>Returns the passengers riding the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getvehicle-entity","title":"getVehicle() -&gt; Entity","text":"<p>Returns the vehicle the entity is riding.</p>"},{"location":"Standard%20Library/Classes/entity/#getx-float","title":"getX() -&gt; Float","text":"<p>Returns the x coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#gety-float","title":"getY() -&gt; Float","text":"<p>Returns the y coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#getz-float","title":"getZ() -&gt; Float","text":"<p>Returns the z coordinate of the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#hascontrollingpassenger-boolean","title":"hasControllingPassenger() -&gt; Boolean","text":"<p>Returns whether the passenger riding the entity is controlling.</p>"},{"location":"Standard%20Library/Classes/entity/#hasnogravity-boolean","title":"hasNoGravity() -&gt; Boolean","text":"<p>Returns whether the entity has no gravity.</p>"},{"location":"Standard%20Library/Classes/entity/#haspassengerpassenger-entity-boolean","title":"hasPassenger(passenger: Entity) -&gt; Boolean","text":"<p>Returns whether <code>passenger</code> is riding the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#haspassengers-boolean","title":"hasPassengers() -&gt; Boolean","text":"<p>Returns whether the entity has passengers.</p>"},{"location":"Standard%20Library/Classes/entity/#hasvehicle-boolean","title":"hasVehicle() -&gt; Boolean","text":"<p>Returns whether the entity is riding an entity.</p>"},{"location":"Standard%20Library/Classes/entity/#iscrawling-boolean","title":"isCrawling() -&gt; Boolean","text":"<p>Returns whether the entity is crawling.</p>"},{"location":"Standard%20Library/Classes/entity/#isdescending-boolean","title":"isDescending() -&gt; Boolean","text":"<p>Returns whether the entity is descending.</p>"},{"location":"Standard%20Library/Classes/entity/#isfireimmune-boolean","title":"isFireImmune() -&gt; Boolean","text":"<p>Returns whether the entity is fire immune.</p>"},{"location":"Standard%20Library/Classes/entity/#isfrozen-boolean","title":"isFrozen() -&gt; Boolean","text":"<p>Returns whether the entity is frozen.</p>"},{"location":"Standard%20Library/Classes/entity/#isglowing-boolean","title":"isGlowing() -&gt; Boolean","text":"<p>Returns whether the entity is glowing.</p>"},{"location":"Standard%20Library/Classes/entity/#isinfluid-boolean","title":"isInFluid() -&gt; Boolean","text":"<p>Returns whether the entity is in a fluid.</p>"},{"location":"Standard%20Library/Classes/entity/#isinlava-boolean","title":"isInLava() -&gt; Boolean","text":"<p>Returns whether the entity is in lava.</p>"},{"location":"Standard%20Library/Classes/entity/#isinsidewall-boolean","title":"isInsideWall() -&gt; Boolean","text":"<p>Returns whether the entity is in inside a wall.</p>"},{"location":"Standard%20Library/Classes/entity/#isinvisible-boolean","title":"isInvisible() -&gt; Boolean","text":"<p>Returns whether the entity is invisible.</p>"},{"location":"Standard%20Library/Classes/entity/#isinvulnerable-boolean","title":"isInvulnerable() -&gt; Boolean","text":"<p>Returns whether the entity is invulnerable.</p>"},{"location":"Standard%20Library/Classes/entity/#isonfire-boolean","title":"isOnFire() -&gt; Boolean","text":"<p>Returns whether the entity is on fire.</p>"},{"location":"Standard%20Library/Classes/entity/#isonground-boolean","title":"isOnGround() -&gt; Boolean","text":"<p>Returns whether the entity is on ground.</p>"},{"location":"Standard%20Library/Classes/entity/#isonrail-boolean","title":"isOnRail() -&gt; Boolean","text":"<p>Returns whether the entity is on a rail.</p>"},{"location":"Standard%20Library/Classes/entity/#issilent-boolean","title":"isSilent() -&gt; Boolean","text":"<p>Returns whether the entity is silent.</p>"},{"location":"Standard%20Library/Classes/entity/#issneaking-boolean","title":"isSneaking() -&gt; Boolean","text":"<p>Returns whether the entity is sneaking.</p>"},{"location":"Standard%20Library/Classes/entity/#issprinting-boolean","title":"isSprinting() -&gt; Boolean","text":"<p>Returns whether the entity is sprinting.</p>"},{"location":"Standard%20Library/Classes/entity/#isswimming-boolean","title":"isSwimming() -&gt; Boolean","text":"<p>Returns whether the entity is swimming.</p>"},{"location":"Standard%20Library/Classes/entity/#istouchingwater-boolean","title":"isTouchingWater() -&gt; Boolean","text":"<p>Returns whether the entity is touching water.</p>"},{"location":"Standard%20Library/Classes/entity/#istouchingwaterorrain-boolean","title":"isTouchingWaterOrRain() -&gt; Boolean","text":"<p>Returns whether the entity is touching water or rain.</p>"},{"location":"Standard%20Library/Classes/entity/#iswet-boolean","title":"isWet() -&gt; Boolean","text":"<p>Returns whether the entity is touching water, being rained on, or is inside a bubble column.</p>"},{"location":"Standard%20Library/Classes/entity/#kill-null","title":"kill() -&gt; Null","text":"<p>Kills the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#raycastdistance-float-target-block-check_fluids-boolean-blockhitresult","title":"raycast(distance: Float, target: Block, check_fluids: Boolean) -&gt; BlockHitResult","text":"<p>Raycasts <code>distance</code> until it hits <code>target</code> and if <code>check_fluids</code> is true and it encounters a fluid it will stop.</p>"},{"location":"Standard%20Library/Classes/entity/#removepassengers-null","title":"removePassengers() -&gt; Null","text":"<p>Dismounts all passengers riding the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#removetagtag-string-null","title":"removeTag(tag: String) -&gt; Null","text":"<p>Removes the <code>commandTag</code> from the entity. Similar to <code>/tag remove</code></p>"},{"location":"Standard%20Library/Classes/entity/#resetportalcooldown-null","title":"resetPortalCooldown() -&gt; Null","text":"<p>Resets the entity's portal cooldown.</p>"},{"location":"Standard%20Library/Classes/entity/#sendmessagecontents-string-null","title":"sendMessage(contents: String) -&gt; Null","text":"<p>Sends a message with contents <code>contents</code> to the entity.</p>"},{"location":"Standard%20Library/Classes/entity/#setinvisibleinvisible-boolean-null","title":"setInvisible(invisible: Boolean) -&gt; Null","text":"<p>Sets the entity to be invisible according to <code>invisible</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setinvulnerableinvulnerable-boolean-null","title":"setInvulnerable(invulnerable: Boolean) -&gt; Null","text":"<p>Sets the entity to be invulnerable according to <code>invulnerable</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setnogravitynogravity-boolean-null","title":"setNoGravity(noGravity: Boolean) -&gt; Null","text":"<p>Sets the entity to have no gravity according to <code>noGravity</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setonfireonfire-boolean-null","title":"setOnFire(onFire: Boolean) -&gt; Null","text":"<p>Sets the entity to be on fire according to <code>onFire</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setongroundonground-boolean-null","title":"setOnGround(onGround: Boolean) -&gt; Null","text":"<p>Sets the entity to be on the ground according to <code>onGround</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setportalcooldownportalcooldown-integer-null","title":"setPortalCooldown(portalCooldown: Integer) -&gt; Null","text":"<p>Sets the entity's portal cooldown to <code>portalCooldown</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setposx-float-y-float-z-float-null","title":"setPos(x: Float, y: Float, z: Float) -&gt; Null","text":"<p>Changes the entity's position according to <code>x</code>, <code>y</code>, and <code>z</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setsilentsilent-boolean-null","title":"setSilent(silent: Boolean) -&gt; Null","text":"<p>Sets the entity to be silent according to <code>silent</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setsneakingsneaking-boolean-null","title":"setSneaking(sneaking: Boolean) -&gt; Null","text":"<p>Sets the entity to be sneaking according to <code>sneaking</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setsprintingsprinting-boolean-null","title":"setSprinting(sprinting: Boolean) -&gt; Null","text":"<p>Sets the entity to be sprinting according to <code>sprinting</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#setswimmingswimming-boolean-null","title":"setSwimming(swimming: Boolean) -&gt; Null","text":"<p>Sets the entity to be swimming according to <code>swimming</code>.</p>"},{"location":"Standard%20Library/Classes/entity/#shoulddismountunderwater-boolean","title":"shouldDismountUnderwater() -&gt; Boolean","text":"<p>Returns whether the entity should dismount underwater.</p>"},{"location":"Standard%20Library/Classes/entity/#stopriding-boolean","title":"stopRiding() -&gt; Boolean","text":"<p>Makes the entity stop riding its vehicle.</p>"},{"location":"Standard%20Library/Classes/entity/#teleportx-float-y-float-z-float-null","title":"teleport(x: Float, y: Float, z: Float) -&gt; Null","text":"<p>Teleports the entity to <code>x</code>, <code>y</code>, and <code>z</code>.</p>"},{"location":"Standard%20Library/Classes/entitytype/","title":"EntityType","text":"<p>The type of an entity.</p>"},{"location":"Standard%20Library/Classes/entitytype/#isfireimmune-boolean","title":"isFireImmune: Boolean","text":"<p>Whether the entity is fire immune.</p>"},{"location":"Standard%20Library/Classes/entitytypes/","title":"EntityTypes","text":""},{"location":"Standard%20Library/Classes/entitytypes/#getidentifier-string-entitytype","title":"get(identifier: String) -&gt; EntityType","text":"<p>Gets the entity type of the <code>identifier</code>.</p>"},{"location":"Standard%20Library/Classes/events/","title":"Events","text":"<p>Please see Events for information.</p>"},{"location":"Standard%20Library/Classes/float/","title":"Float","text":"<p>Represents a floating point number.</p> <p>Example:</p> <pre><code>var x = 1.5;\n</code></pre>"},{"location":"Standard%20Library/Classes/float/#static-parsefloatfloat-string-float","title":"static parseFloat(float: String) -&gt; Float","text":"<p>Converts the string <code>float</code> into a float.</p>"},{"location":"Standard%20Library/Classes/function/","title":"Function","text":"<p>Represents a function.</p>"},{"location":"Standard%20Library/Classes/gamerules/","title":"GameRules","text":""},{"location":"Standard%20Library/Classes/gamerules/#getdofiretick-boolean","title":"getDoFireTick() -&gt; Boolean","text":"<p>Returns the value of the doFireTick gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdomobgriefing-boolean","title":"getDoMobGriefing() -&gt; Boolean","text":"<p>Returns the value of the doMobGriefing gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getkeepinventory-boolean","title":"getKeepInventory() -&gt; Boolean","text":"<p>Returns the value of the keepInventory gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdomobspawning-boolean","title":"getDoMobSpawning() -&gt; Boolean","text":"<p>Returns the value of the doMobSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdomobloot-boolean","title":"getDoMobLoot() -&gt; Boolean","text":"<p>Returns the value of the doMobLoot gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdotiledrops-boolean","title":"getDoTileDrops() -&gt; Boolean","text":"<p>Returns the value of the doTileDrops gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdoentitydrops-boolean","title":"getDoEntityDrops() -&gt; Boolean","text":"<p>Returns the value of the doEntityDrops gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getcommandblockoutput-boolean","title":"getCommandBlockOutput() -&gt; Boolean","text":"<p>Returns the value of the commandBlockOutput gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getnaturalregeneration-boolean","title":"getNaturalRegeneration() -&gt; Boolean","text":"<p>Returns the value of the naturalRegeneration gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdodaylightcycle-boolean","title":"getDoDaylightCycle() -&gt; Boolean","text":"<p>Returns the value of the doDaylightCycle gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getlogadmincommands-boolean","title":"getLogAdminCommands() -&gt; Boolean","text":"<p>Returns the value of the logAdminCommands gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getshowdeathmessages-boolean","title":"getShowDeathMessages() -&gt; Boolean","text":"<p>Returns the value of the showDeathMessages gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getrandomtickspeed-integer","title":"getRandomTickSpeed() -&gt; Integer","text":"<p>Returns the value of the randomTickSpeed gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getsendcommandfeedback-boolean","title":"getSendCommandFeedback() -&gt; Boolean","text":"<p>Returns the value of the sendCommandFeedback gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getreduceddebuginfo-boolean","title":"getReducedDebugInfo() -&gt; Boolean","text":"<p>Returns the value of the reducedDebugInfo gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getspectatorsgeneratechunks-boolean","title":"getSpectatorsGenerateChunks() -&gt; Boolean","text":"<p>Returns the value of the spectatorsGenerateChunks gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getspawnradius-integer","title":"getSpawnRadius() -&gt; Integer","text":"<p>Returns the value of the spawnRadius gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdisableelytramovementcheck-boolean","title":"getDisableElytraMovementCheck() -&gt; Boolean","text":"<p>Returns the value of the disableElytraMovementCheck gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getmaxentitycramming-integer","title":"getMaxEntityCramming() -&gt; Integer","text":"<p>Returns the value of the maxEntityCramming gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdoweathercycle-boolean","title":"getDoWeatherCycle() -&gt; Boolean","text":"<p>Returns the value of the doWeatherCycle gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdolimitedcrafting-boolean","title":"getDoLimitedCrafting() -&gt; Boolean","text":"<p>Returns the value of the doLimitedCrafting gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getmaxcommandchainlength-integer","title":"getMaxCommandChainLength() -&gt; Integer","text":"<p>Returns the value of the maxCommandChainLength gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getcommandmodificationblocklimit-integer","title":"getCommandModificationBlockLimit() -&gt; Integer","text":"<p>Returns the value of the commandModificationBlockLimit gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getannounceadvancements-boolean","title":"getAnnounceAdvancements() -&gt; Boolean","text":"<p>Returns the value of the announceAdvancements gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdisableraids-boolean","title":"getDisableRaids() -&gt; Boolean","text":"<p>Returns the value of the disableRaids gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdoinsomnia-boolean","title":"getDoInsomnia() -&gt; Boolean","text":"<p>Returns the value of the doInsomnia gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdoimmediaterespawn-boolean","title":"getDoImmediateRespawn() -&gt; Boolean","text":"<p>Returns the value of the doImmediateRespawn gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdrowningdamage-boolean","title":"getDrowningDamage() -&gt; Boolean","text":"<p>Returns the value of the drowningDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getfalldamage-boolean","title":"getFallDamage() -&gt; Boolean","text":"<p>Returns the value of the fallDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getfiredamage-boolean","title":"getFireDamage() -&gt; Boolean","text":"<p>Returns the value of the fireDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getfreezedamage-boolean","title":"getFreezeDamage() -&gt; Boolean","text":"<p>Returns the value of the freezeDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdopatrolspawning-boolean","title":"getDoPatrolSpawning() -&gt; Boolean","text":"<p>Returns the value of the doPatrolSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdotraderspawning-boolean","title":"getDoTraderSpawning() -&gt; Boolean","text":"<p>Returns the value of the doTraderSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdowardenspawning-boolean","title":"getDoWardenSpawning() -&gt; Boolean","text":"<p>Returns the value of the doWardenSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getforgivedeadplayers-boolean","title":"getForgiveDeadPlayers() -&gt; Boolean","text":"<p>Returns the value of the forgiveDeadPlayers gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getuniversalanger-boolean","title":"getUniversalAnger() -&gt; Boolean","text":"<p>Returns the value of the universalAnger gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getplayerssleepingpercentage-boolean","title":"getPlayersSleepingPercentage() -&gt; Boolean","text":"<p>Returns the value of the playersSleepingPercentage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getblockexplosiondropdecay-boolean","title":"getBlockExplosionDropDecay() -&gt; Boolean","text":"<p>Returns the value of the blockExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getmobexplosiondropdecay-boolean","title":"getMobExplosionDropDecay() -&gt; Boolean","text":"<p>Returns the value of the mobExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#gettntexplosiondropdecay-boolean","title":"getTntExplosionDropDecay() -&gt; Boolean","text":"<p>Returns the value of the tntExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getsnowaccumulationheight-boolean","title":"getSnowAccumulationHeight() -&gt; Boolean","text":"<p>Returns the value of the snowAccumulationHeight gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getwatersourceconversion-boolean","title":"getWaterSourceConversion() -&gt; Boolean","text":"<p>Returns the value of the waterSourceConversion gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getlavasourceconversion-boolean","title":"getLavaSourceConversion() -&gt; Boolean","text":"<p>Returns the value of the lavaSourceConversion gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getglobalsoundevents-boolean","title":"getGlobalSoundEvents() -&gt; Boolean","text":"<p>Returns the value of the globalSoundEvents gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getdovinesspread-boolean","title":"getDoVinesSpread() -&gt; Boolean","text":"<p>Returns the value of the doVinesSpread gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getenderpearlsvanishondeath-boolean","title":"getEnderPearlsVanishOnDeath() -&gt; Boolean","text":"<p>Returns the value of the enderPearlsVanishOnDeath gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getmaxargumentcount-integer","title":"getMaxArgumentCount() -&gt; Integer","text":"<p>A custom gamerule created by Sculk. See Added Gamerules for more information.</p> <p>Returns the value of the maxArgumentCount gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#getmaxloops-integer","title":"getMaxLoops() -&gt; Integer","text":"<p>A custom gamerule created by Sculk. See Added Gamerules for more information.</p> <p>Returns the value of the maxLoops gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdofiretickdofiretick-boolean-null","title":"setDoFireTick(doFireTick: Boolean) -&gt; Null","text":"<p>Sets the value of the doFireTick gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdomobgriefingdomobgriefing-boolean-null","title":"setDoMobGriefing(doMobGriefing: Boolean) -&gt; Null","text":"<p>Sets the value of the doMobGriefing gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setkeepinventorykeepinventory-boolean-null","title":"setKeepInventory(keepInventory: Boolean) -&gt; Null","text":"<p>Sets the value of the keepInventory gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdomobspawningdomobspawning-boolean-null","title":"setDoMobSpawning(doMobSpawning: Boolean) -&gt; Null","text":"<p>Sets the value of the doMobSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdomoblootdomobloot-boolean-null","title":"setDoMobLoot(doMobLoot: Boolean) -&gt; Null","text":"<p>Sets the value of the doMobLoot gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdotiledropsdotiledrops-boolean-null","title":"setDoTileDrops(doTileDrops: Boolean) -&gt; Null","text":"<p>Sets the value of the doTileDrops gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdoentitydropsdoentitydrops-boolean-null","title":"setDoEntityDrops(doEntityDrops: Boolean) -&gt; Null","text":"<p>Sets the value of the doEntityDrops gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setcommandblockoutputcommandblockoutput-boolean-null","title":"setCommandBlockOutput(commandBlockOutput: Boolean) -&gt; Null","text":"<p>Sets the value of the commandBlockOutput gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setnaturalregenerationnaturalregeneration-boolean-null","title":"setNaturalRegeneration(naturalRegeneration: Boolean) -&gt; Null","text":"<p>Sets the value of the naturalRegeneration gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdodaylightcycledodaylightcycle-boolean-null","title":"setDoDaylightCycle(doDaylightCycle: Boolean) -&gt; Null","text":"<p>Sets the value of the doDaylightCycle gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setlogadmincommandslogadmincommands-boolean-null","title":"setLogAdminCommands(logAdminCommands: Boolean) -&gt; Null","text":"<p>Sets the value of the logAdminCommands gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setshowdeathmessagesshowdeathmessages-boolean-null","title":"setShowDeathMessages(showDeathMessages: Boolean) -&gt; Null","text":"<p>Sets the value of the showDeathMessages gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setrandomtickspeedrandomtickspeed-integer-null","title":"setRandomTickSpeed(randomTickSpeed: Integer) -&gt; Null","text":"<p>Sets the value of the randomTickSpeed gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setsendcommandfeedbacksendcommandfeedback-boolean-null","title":"setSendCommandFeedback(sendCommandFeedback: Boolean) -&gt; Null","text":"<p>Sets the value of the sendCommandFeedback gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setreduceddebuginforeduceddebuginfo-boolean-null","title":"setReducedDebugInfo(reducedDebugInfo: Boolean) -&gt; Null","text":"<p>Sets the value of the reducedDebugInfo gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setspectatorsgeneratechunksspectatorsgeneratechunks-boolean-null","title":"setSpectatorsGenerateChunks(spectatorsGenerateChunks: Boolean) -&gt; Null","text":"<p>Sets the value of the spectatorsGenerateChunks gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setspawnradiusspawnradius-integer-null","title":"setSpawnRadius(spawnRadius: Integer) -&gt; Null","text":"<p>Sets the value of the spawnRadius gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdisableelytramovementcheckdisableelytramovementcheck-boolean-null","title":"setDisableElytraMovementCheck(disableElytraMovementCheck: Boolean) -&gt; Null","text":"<p>Sets the value of the disableElytraMovementCheck gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setmaxentitycrammingmaxentitycramming-integer-null","title":"setMaxEntityCramming(maxEntityCramming: Integer) -&gt; Null","text":"<p>Sets the value of the maxEntityCramming gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdoweathercycledoweathercycle-boolean-null","title":"setDoWeatherCycle(doWeatherCycle: Boolean) -&gt; Null","text":"<p>Sets the value of the doWeatherCycle gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdolimitedcraftingdolimitedcrafting-boolean-null","title":"setDoLimitedCrafting(doLimitedCrafting: Boolean) -&gt; Null","text":"<p>Sets the value of the doLimitedCrafting gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setmaxcommandchainlengthmaxcommandchainlength-integer-null","title":"setMaxCommandChainLength(maxCommandChainLength: Integer) -&gt; Null","text":"<p>Sets the value of the maxCommandChainLength gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setcommandmodificationblocklimitcommandmodificationblocklimit-integer-null","title":"setCommandModificationBlockLimit(commandModificationBlockLimit: Integer) -&gt; Null","text":"<p>Sets the value of the commandModificationBlockLimit gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setannounceadvancementsannounceadvancements-boolean-null","title":"setAnnounceAdvancements(announceAdvancements: Boolean) -&gt; Null","text":"<p>Sets the value of the announceAdvancements gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdisableraidsdisableraids-boolean-null","title":"setDisableRaids(disableRaids: Boolean) -&gt; Null","text":"<p>Sets the value of the disableRaids gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdoinsomniadoinsomnia-boolean-null","title":"setDoInsomnia(doInsomnia: Boolean) -&gt; Null","text":"<p>Sets the value of the doInsomnia gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdoimmediaterespawndoimmediaterespawn-boolean-null","title":"setDoImmediateRespawn(doImmediateRespawn: Boolean) -&gt; Null","text":"<p>Sets the value of the doImmediateRespawn gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdrowningdamagedrowningdamage-boolean-null","title":"setDrowningDamage(drowningDamage: Boolean) -&gt; Null","text":"<p>Sets the value of the drowningDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setfalldamagefalldamage-boolean-null","title":"setFallDamage(fallDamage: Boolean) -&gt; Null","text":"<p>Sets the value of the fallDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setfiredamagefiredamage-boolean-null","title":"setFireDamage(fireDamage: Boolean) -&gt; Null","text":"<p>Sets the value of the fireDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setfreezedamagefreezedamage-boolean-null","title":"setFreezeDamage(freezeDamage: Boolean) -&gt; Null","text":"<p>Sets the value of the freezeDamage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdopatrolspawningdopatrolspawning-boolean-null","title":"setDoPatrolSpawning(doPatrolSpawning: Boolean) -&gt; Null","text":"<p>Sets the value of the doPatrolSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdotraderspawningdotraderspawning-boolean-null","title":"setDoTraderSpawning(doTraderSpawning: Boolean) -&gt; Null","text":"<p>Sets the value of the doTraderSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdowardenspawningdowardenspawning-boolean-null","title":"setDoWardenSpawning(doWardenSpawning: Boolean) -&gt; Null","text":"<p>Sets the value of the doWardenSpawning gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setforgivedeadplayersforgivedeadplayers-boolean-null","title":"setForgiveDeadPlayers(forgiveDeadPlayers: Boolean) -&gt; Null","text":"<p>Sets the value of the forgiveDeadPlayers gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setuniversalangeruniversalanger-boolean-null","title":"setUniversalAnger(universalAnger: Boolean) -&gt; Null","text":"<p>Sets the value of the universalAnger gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setplayerssleepingpercentageplayerssleepingpercentage-boolean-null","title":"setPlayersSleepingPercentage(playersSleepingPercentage: Boolean) -&gt; Null","text":"<p>Sets the value of the playersSleepingPercentage gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setblockexplosiondropdecayblockexplosiondropdecay-boolean-null","title":"setBlockExplosionDropDecay(blockExplosionDropDecay: Boolean) -&gt; Null","text":"<p>Sets the value of the blockExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setmobexplosiondropdecaymobexplosiondropdecay-boolean-null","title":"setMobExplosionDropDecay(mobExplosionDropDecay: Boolean) -&gt; Null","text":"<p>Sets the value of the mobExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#settntexplosiondropdecaytntexplosiondropdecay-boolean-null","title":"setTntExplosionDropDecay(tntExplosionDropDecay: Boolean) -&gt; Null","text":"<p>Sets the value of the tntExplosionDropDecay gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setsnowaccumulationheightsnowaccumulationheight-boolean-null","title":"setSnowAccumulationHeight(snowAccumulationHeight: Boolean) -&gt; Null","text":"<p>Sets the value of the snowAccumulationHeight gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setwatersourceconversionwatersourceconversion-boolean-null","title":"setWaterSourceConversion(waterSourceConversion: Boolean) -&gt; Null","text":"<p>Sets the value of the waterSourceConversion gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setlavasourceconversionlavasourceconversion-boolean-null","title":"setLavaSourceConversion(lavaSourceConversion: Boolean) -&gt; Null","text":"<p>Sets the value of the lavaSourceConversion gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setglobalsoundeventsglobalsoundevents-boolean-null","title":"setGlobalSoundEvents(globalSoundEvents: Boolean) -&gt; Null","text":"<p>Sets the value of the globalSoundEvents gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setdovinesspreaddovinesspread-boolean-null","title":"setDoVinesSpread(doVinesSpread: Boolean) -&gt; Null","text":"<p>Sets the value of the doVinesSpread gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setenderpearlsvanishondeathenderpearlsvanishondeath-boolean-null","title":"setEnderPearlsVanishOnDeath(enderPearlsVanishOnDeath: Boolean) -&gt; Null","text":"<p>Sets the value of the enderPearlsVanishOnDeath gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setmaxargumentcountmaxargumentcount-integer-null","title":"setMaxArgumentCount(maxArgumentCount: Integer) -&gt; Null","text":"<p>A custom gamerule created by Sculk. See Added Gamerules for more information.</p> <p>Sets the value of the maxArgumentCount gamerule.</p>"},{"location":"Standard%20Library/Classes/gamerules/#setmaxloopsmaxloops-integer-null","title":"setMaxLoops(maxLoops: Integer) -&gt; Null","text":"<p>A custom gamerule created by Sculk. See Added Gamerules for more information.</p> <p>Sets the value of the maxLoops gamerule.</p>"},{"location":"Standard%20Library/Classes/gui/","title":"GUI","text":""},{"location":"Standard%20Library/Classes/gui/#getinventory-inventory","title":"getInventory() -&gt; Inventory","text":"<p>Returns the inventory of the GUI.</p>"},{"location":"Standard%20Library/Classes/gui/#setinventoryinventory-inventory-null","title":"setInventory(inventory: Inventory) -&gt; Null","text":"<p>Sets the contents of the GUI to be <code>inventory</code>.</p>"},{"location":"Standard%20Library/Classes/gui/#gettitle-string","title":"getTitle() -&gt; String","text":"<p>Returns the title of the GUI.</p>"},{"location":"Standard%20Library/Classes/gui/#onslotclickslot-integer-button-integer-gui-gui-player-playerentity-boolean","title":"onSlotClick(slot: Integer, button: Integer, gui: GUI, player: PlayerEntity) -&gt; Boolean","text":"<p>This method is called when a user clicks a slot. This method is meant to be overridden.</p>"},{"location":"Standard%20Library/Classes/gui/#oncloseplayer-playerentity-gui-gui-null","title":"onClose(player: PlayerEntity, gui: GUI) -&gt; Null","text":"<p>This method is called when the user closes the GUI. This method is meant to be overridden.</p>"},{"location":"Standard%20Library/Classes/integer/","title":"Integer","text":"<p>Represents an integer value.</p> <p>Example: <pre><code>var x = 1;\n</code></pre></p>"},{"location":"Standard%20Library/Classes/integer/#static-parseintegerinteger-string-integer","title":"static parseInteger(integer: String) -&gt; Integer","text":"<p>Converts the string <code>integer</code> into an integer.</p>"},{"location":"Standard%20Library/Classes/inventory/","title":"Inventory","text":"<p>Represents an entity's inventory.</p>"},{"location":"Standard%20Library/Classes/inventory/#containsitem-item-boolean","title":"contains(item: Item) -&gt; Boolean","text":"<p>Returns whether the item is in the inventory.</p>"},{"location":"Standard%20Library/Classes/inventory/#countitem-item-integer","title":"count(item: Item) -&gt; Integer","text":"<p>Returns how many of <code>item</code> is in the inventory.</p>"},{"location":"Standard%20Library/Classes/inventory/#getstackslot-integer-itemstack","title":"getStack(slot: Integer) -&gt; ItemStack","text":"<p>Returns the stack in the slot <code>slot</code>.</p>"},{"location":"Standard%20Library/Classes/inventory/#isempty-boolean","title":"isEmpty() -&gt; Boolean","text":"<p>Returns whether the inventory is empty.</p>"},{"location":"Standard%20Library/Classes/inventory/#removestackstack-itemstack-null","title":"removeStack(stack: ItemStack) -&gt; Null","text":"<p>Removes <code>stack</code> from the inventory.</p>"},{"location":"Standard%20Library/Classes/inventory/#setstackslot-integer-stack-itemstack-null","title":"setStack(slot: Integer, stack: ItemStack) -&gt; Null","text":"<p>Sets the stack at slot <code>slot</code> to the stack <code>stack</code>.</p>"},{"location":"Standard%20Library/Classes/item/","title":"Item","text":"<p>Represents an item.</p>"},{"location":"Standard%20Library/Classes/item/#getmaxcount-integer","title":"getMaxCount() -&gt; Integer","text":"<p>Returns the max amount of items that can be in a stack.</p>"},{"location":"Standard%20Library/Classes/item/#registeritem-item-item","title":"register(item: Item) -&gt; Item","text":"<p>Registers <code>item</code>. See Registering Items for more details.</p>"},{"location":"Standard%20Library/Classes/item/#getmaxdamage-integer","title":"getMaxDamage() -&gt; Integer","text":"<p>Returns the durability of the item.</p>"},{"location":"Standard%20Library/Classes/item/#getname-string","title":"getName() -&gt; String","text":"<p>Returns the name of the item.</p>"},{"location":"Standard%20Library/Classes/item/#isdamageable-boolean","title":"isDamageable() -&gt; Boolean","text":"<p>Returns whether the item is damageable.</p>"},{"location":"Standard%20Library/Classes/item/#isfireproof-boolean","title":"isFireproof() -&gt; Boolean","text":"<p>Returns whether the item is fireproof.</p>"},{"location":"Standard%20Library/Classes/item/#isfood-boolean","title":"isFood() -&gt; Boolean","text":"<p>Returns whether the item is food.</p>"},{"location":"Standard%20Library/Classes/items/","title":"Items","text":""},{"location":"Standard%20Library/Classes/items/#getitemid-string-item","title":"get(itemID: String) -&gt; Item","text":"<p>Gets the item from the given ID.</p>"},{"location":"Standard%20Library/Classes/itemsettings/","title":"ItemSettings","text":"<p>See Custom Items for item settings.</p>"},{"location":"Standard%20Library/Classes/itemstack/","title":"ItemStack","text":"<p>Represents a stack of items.</p>"},{"location":"Standard%20Library/Classes/itemstack/#item-item","title":"item: Item","text":"<p>The item in the stack.</p>"},{"location":"Standard%20Library/Classes/itemstack/#inititem-item-count-integer-itemstack","title":"init(item: Item, count: Integer) -&gt; ItemStack","text":"<p>Initializes ItemStack.</p>"},{"location":"Standard%20Library/Classes/itemstack/#decrementamount-integer-null","title":"decrement(amount: Integer) -&gt; Null","text":"<p>Decrements the amount of items in the stack by <code>amount</code>.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getcount-integer","title":"getCount() -&gt; Integer","text":"<p>Returns the amount of items in the stack.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getdamage-integer","title":"getDamage() -&gt; Integer","text":"<p>Returns how the damage (lost durability) of the item stack.</p> <p>Does NOT return how much damage the item does!</p>"},{"location":"Standard%20Library/Classes/itemstack/#getholder-entity","title":"getHolder() -&gt; Entity","text":"<p>Returns the entity who is holding the item.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getitem-item","title":"getItem() -&gt; Item","text":"<p>Returns the item in the stack.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getmaxcount-integer","title":"getMaxCount() -&gt; Integer","text":"<p>Returns the max amount of items that can be in 1 stack.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getmaxdamage-integer","title":"getMaxDamage() -&gt; Integer","text":"<p>Returns the durability of the item.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getname-string","title":"getName() -&gt; String","text":"<p>Returns the name of the item.</p>"},{"location":"Standard%20Library/Classes/itemstack/#getrepaircost-integer","title":"getRepairCost() -&gt; Integer","text":"<p>Returns the repair cost of the item.</p>"},{"location":"Standard%20Library/Classes/itemstack/#hasenchantments-boolean","title":"hasEnchantments() -&gt; Boolean","text":"<p>Returns whether the item has enchantments.</p>"},{"location":"Standard%20Library/Classes/itemstack/#incrementamount-integer-null","title":"increment(amount: Integer) -&gt; Null","text":"<p>Increments the amount of items in the stack by <code>amount</code>.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isdamageable-boolean","title":"isDamageable() -&gt; Boolean","text":"<p>Returns whether the item is damageable.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isdamaged-boolean","title":"isDamaged() -&gt; Boolean","text":"<p>Returns whether the item is damaged.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isenchantable-boolean","title":"isEnchantable() -&gt; Boolean","text":"<p>Returns whether the item is enchantable.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isfood-boolean","title":"isFood() -&gt; Boolean","text":"<p>Returns whether the item is food.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isinframe-boolean","title":"isInFrame() -&gt; Boolean","text":"<p>Returns whether the item is in a frame.</p>"},{"location":"Standard%20Library/Classes/itemstack/#isstackable-boolean","title":"isStackable() -&gt; Boolean","text":"<p>Returns whether the item is stackable.</p>"},{"location":"Standard%20Library/Classes/itemstack/#setcountamount-integer-null","title":"setCount(amount: Integer) -&gt; Null","text":"<p>Sets the amount of items in the stack to <code>amount</code>.</p>"},{"location":"Standard%20Library/Classes/itemstack/#setdamagedamage-integer-null","title":"setDamage(damage: Integer) -&gt; Null","text":"<p>Sets the damage (lost durability) of the item.</p>"},{"location":"Standard%20Library/Classes/itemstack/#setrepaircostrepair_cost-integer-null","title":"setRepairCost(repair_cost: Integer) -&gt; Null","text":"<p>Sets the repair cost of the item.</p>"},{"location":"Standard%20Library/Classes/list/","title":"List","text":"<p>Represents a list of items.</p> <pre><code>var list = [1, 2, 3];\n\nprint(list[0]); // 1\n</code></pre>"},{"location":"Standard%20Library/Classes/list/#appendobject-object-null","title":"append(object: Object) -&gt; Null","text":"<p>Appends <code>object</code> to the list.</p>"},{"location":"Standard%20Library/Classes/list/#tostring-string","title":"toString() -&gt; String","text":"<p>Returns the list in string form.</p>"},{"location":"Standard%20Library/Classes/list/#containsobject-object-boolean","title":"contains(object: Object) -&gt; Boolean","text":"<p>Returns whether <code>object</code> is in the list.</p>"},{"location":"Standard%20Library/Classes/livingentity/","title":"LivingEntity","text":"<p>Represents a living entity.</p>"},{"location":"Standard%20Library/Classes/livingentity/#tiltscreenx-float-z-float-null","title":"tiltScreen(x: Float, z: Float) -&gt; Null","text":"<p>Tilts the screen of the entity.</p>"},{"location":"Standard%20Library/Classes/livingentity/#wakeup-null","title":"wakeUp() -&gt; Null","text":"<p>Wakes the entity up.</p>"},{"location":"Standard%20Library/Classes/method/","title":"Method","text":"<p>Represents a method on a class.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/","title":"MinecraftServer","text":"<p>Represents the Minecraft Server.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#runcommandcommand-string-commandresult","title":"runCommand(command: String) -&gt; CommandResult","text":"<p>Runs the command <code>command</code>.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#setpvpenabledpvp_enabled-boolean-null","title":"setPVPEnabled(pvp_enabled: Boolean) -&gt; Null","text":"<p>Sets pvp to be enabled according to <code>pvp_enabled</code>.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#setdifficultylockeddifficulty_locked-boolean-null","title":"setDifficultyLocked(difficulty_locked: Boolean) -&gt; Null","text":"<p>Sets the difficulty to be locked according to <code>difficulty_locked</code>.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#ispvpenabled-boolean","title":"isPVPEnabled() -&gt; Boolean","text":"<p>Returns whether pvp is enabled.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#isnetherenabled-boolean","title":"isNetherEnabled() -&gt; Boolean","text":"<p>Returns whether the nether is enabled.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#isflightenabled-boolean","title":"isFlightEnabled() -&gt; Boolean","text":"<p>Returns whether flight is enabled.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#getserverport-integer","title":"getServerPort() -&gt; Integer","text":"<p>Returns the port of the server.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#getserverip-string","title":"getServerIP() -&gt; String","text":"<p>Returns the IP of the server.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#ishardcore-boolean","title":"isHardcore() -&gt; Boolean","text":"<p>Returns whether the server is hardcore.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#arecommandblocksenabled-boolean","title":"areCommandBlocksEnabled() -&gt; Boolean","text":"<p>Returns whether command blocks are enabled.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#setdifficultydifficulty-difficulty-null","title":"setDifficulty(difficulty: Difficulty) -&gt; Null","text":"<p>Sets the difficulty to <code>difficuly</code>.</p>"},{"location":"Standard%20Library/Classes/minecraftserver/#ismodinstalledmodid-string-boolean","title":"isModInstalled(modID: String) -&gt; Boolean","text":"<p>Returns whether <code>modID</code> is installed.</p>"},{"location":"Standard%20Library/Classes/null/","title":"Null","text":"<p>Represents <code>null</code>.</p>"},{"location":"Standard%20Library/Classes/number/","title":"Number","text":"<p>Represents a number, like Float and Integer.</p>"},{"location":"Standard%20Library/Classes/object/","title":"Object","text":"<p>The base of every class.</p>"},{"location":"Standard%20Library/Classes/playerentity/","title":"PlayerEntity","text":"<p>Represents the player.</p>"},{"location":"Standard%20Library/Classes/playerentity/#addexperiencepointsexperience_points-integer-null","title":"addExperiencePoints(experience_points: Integer) -&gt; Null","text":"<p>Adds <code>experience_points</code> amount of XP points to the player.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getenderchestinventory-inventory","title":"getEnderChestInventory() -&gt; Inventory","text":"<p>Returns the players ender chest inventory.</p>"},{"location":"Standard%20Library/Classes/playerentity/#setenderchestinventoryinventory-inventory-null","title":"setEnderChestInventory(inventory: Inventory) -&gt; Null","text":"<p>Sets the players ender chest inventory.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getinventory-inventory","title":"getInventory() -&gt; Inventory","text":"<p>Returns the players inventory.</p>"},{"location":"Standard%20Library/Classes/playerentity/#setinventoryinventory-inventory-null","title":"setInventory(inventory: Inventory) -&gt; Null","text":"<p>Sets the players inventory.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getstackinmainhand-itemstack","title":"getStackInMainHand() -&gt; ItemStack","text":"<p>Returns the item stack in the players main hand.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getstackinoffhand-itemstack","title":"getStackInOffHand() -&gt; ItemStack","text":"<p>Returns the item stack in the players offhand.</p>"},{"location":"Standard%20Library/Classes/playerentity/#addexperiencelevelsexperience_levels-integer-null","title":"addExperienceLevels(experience_levels: Integer) -&gt; Null","text":"<p>Adds <code>experience_levels</code> amount of XP levels to the player.</p>"},{"location":"Standard%20Library/Classes/playerentity/#iscreative-boolean","title":"isCreative() -&gt; Boolean","text":"<p>Returns whether the player is in creative mode.</p>"},{"location":"Standard%20Library/Classes/playerentity/#isspectator-boolean","title":"isSpectator() -&gt; Boolean","text":"<p>Returns whether the player is in spectator mode.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getname-string","title":"getName() -&gt; String","text":"<p>Returns the name of the player.</p>"},{"location":"Standard%20Library/Classes/playerentity/#getuuid-string","title":"getUUID() -&gt; String","text":"<p>Returns the UUID of the player.</p>"},{"location":"Standard%20Library/Classes/playermanager/","title":"PlayerManager","text":""},{"location":"Standard%20Library/Classes/playermanager/#arecheatsenabled-boolean","title":"areCheatsEnabled() -&gt; Boolean","text":"<p>Returns whether cheats are enabled.</p>"},{"location":"Standard%20Library/Classes/playermanager/#getcurrentplayercount-integer","title":"getCurrentPlayerCount() -&gt; Integer","text":"<p>Returns the current amount of players.</p>"},{"location":"Standard%20Library/Classes/playermanager/#getmaxplayercount-integer","title":"getMaxPlayerCount() -&gt; Integer","text":"<p>Returns the max player count.</p>"},{"location":"Standard%20Library/Classes/playermanager/#getsimulationdistance-integer","title":"getSimulationDistance() -&gt; Integer","text":"<p>Returns the simulation distance.</p>"},{"location":"Standard%20Library/Classes/playermanager/#getviewdistance-integer","title":"getViewDistance() -&gt; Integer","text":"<p>Returns the view distance.</p>"},{"location":"Standard%20Library/Classes/playermanager/#iswhitelistenabled-boolean","title":"isWhitelistEnabled() -&gt; Boolean","text":"<p>Returns whether whitelist is enabled.</p>"},{"location":"Standard%20Library/Classes/playermanager/#setcheatsenabledcheats_enabled-boolean-null","title":"setCheatsEnabled(cheats_enabled: Boolean) -&gt; Null","text":"<p>Sets cheats to be enabled according to <code>cheats_enabled</code>.</p>"},{"location":"Standard%20Library/Classes/playermanager/#setsimulationdistancesimulation_distance-boolean-null","title":"setSimulationDistance(simulation_distance: Boolean) -&gt; Null","text":"<p>Sets the simulation distance according to <code>simulation_distance</code>.</p>"},{"location":"Standard%20Library/Classes/playermanager/#setviewdistanceview_distance-boolean-null","title":"setViewDistance(view_distance: Boolean) -&gt; Null","text":"<p>Sets the view distance according to <code>view_distance</code>.</p>"},{"location":"Standard%20Library/Classes/playermanager/#setwhitelistenabledwhitelist_enabled-boolean-null","title":"setWhitelistEnabled(whitelist_enabled: Boolean) -&gt; Null","text":"<p>Sets whitelist to be enabled according to <code>whitelist_enabled</code>.</p>"},{"location":"Standard%20Library/Classes/playermanager/#getplayername-string-null","title":"getPlayer(name: String) -&gt; Null","text":"<p>Returns the player with the name <code>name</code>.</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/","title":"ServerPlayerEntity","text":"<p>Represents a player on the server level. Extends from PlayerEntity</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/#setgamemodegame_mode-gamemode-null","title":"setGameMode(game_mode: GameMode) -&gt; Null","text":"<p>Changes the players game mode based on <code>game_mode</code>.</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/#dropselecteditem-null","title":"dropSelectedItem() -&gt; Null","text":"<p>Drops the players selected item.</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/#getviewdistance-integer","title":"getViewDistance() -&gt; Integer","text":"<p>Returns the players view distance.</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/#setexperiencelevelsexperience_levels-integer-null","title":"setExperienceLevels(experience_levels: Integer) -&gt; Null","text":"<p>Sets the players experience levels to <code>experience_levels</code>.</p>"},{"location":"Standard%20Library/Classes/serverplayerentity/#setexperiencepointsexperience_points-integer-null","title":"setExperiencePoints(experience_points: Integer) -&gt; Null","text":"<p>Sets the players experience points to <code>experience_points</code>.</p>"},{"location":"Standard%20Library/Classes/string/","title":"String","text":"<p>Represents a string.</p> <p>Example: <pre><code>var x = \"Hello, World!\";\nvar unicode = \"\\u221A\"; // \u221a (Square Root)\n</code></pre></p>"},{"location":"Standard%20Library/Classes/string/#fromunicodeunicode-integer-string","title":"fromUnicode(unicode: Integer) -&gt; String","text":"<p>Returns the unicode character from the unicode point <code>unicode</code>.</p>"},{"location":"Standard%20Library/Classes/string/#startswithprefix-string-boolean","title":"startsWith(prefix: String) -&gt; Boolean","text":"<p>Returns whether the string starts with <code>prefix</code>.</p>"},{"location":"Standard%20Library/Classes/string/#endswithsuffix-string-boolean","title":"endsWith(suffix: String) -&gt; Boolean","text":"<p>Returns whether the string ends with <code>suffix</code>.</p>"},{"location":"Standard%20Library/Classes/string/#splitdelimiter-string-liststring","title":"split(delimiter: String) -&gt; List[String]","text":"<p>Splits the string into a list of strings with the delimiter <code>delimiter</code>.</p>"},{"location":"Standard%20Library/Classes/string/#length-integer","title":"length() -&gt; Integer","text":"<p>Returns the length of the string.</p>"},{"location":"Standard%20Library/Classes/string/#uppercase-string","title":"uppercase() -&gt; String","text":"<p>Returns the string in all uppercase.</p>"},{"location":"Standard%20Library/Classes/string/#lowercase-string","title":"lowercase() -&gt; String","text":"<p>Returns the string in all lowercase.</p>"},{"location":"Standard%20Library/Classes/type/","title":"Type","text":"<p>Represents the type of a class.</p>"},{"location":"Standard%20Library/Classes/vec3d/","title":"Vec3d","text":"<p>Represents a 3D vector. Similar to BlockPos except values are float based.</p>"},{"location":"Standard%20Library/Classes/vec3d/#x-float","title":"x: Float","text":"<p>The x coordinate.</p>"},{"location":"Standard%20Library/Classes/vec3d/#y-float","title":"y: Float","text":"<p>The y coordinate.</p>"},{"location":"Standard%20Library/Classes/vec3d/#z-float","title":"z: Float","text":"<p>The z coordinate.</p>"},{"location":"Standard%20Library/Classes/world/","title":"World","text":"<p>Represents a world.</p>"},{"location":"Standard%20Library/Classes/world/#breakblockpos-blockpos-drop_items-boolean-null","title":"breakBlock(pos: BlockPos, drop_items: Boolean) -&gt; Null","text":"<p>Breaks the block at <code>pos</code> and drops the items if <code>drop_items</code> is true.</p>"},{"location":"Standard%20Library/Classes/world/#cansetblockblock_pos-blockpos-boolean","title":"canSetBlock(block_pos: BlockPos) -&gt; Boolean","text":"<p>Returns whether a block can be placed at <code>block_pos</code>.</p>"},{"location":"Standard%20Library/Classes/world/#getblockpos-blockpos-block","title":"getBlock(pos: BlockPos) -&gt; Block","text":"<p>Returns the block at <code>pos</code>.</p>"},{"location":"Standard%20Library/Classes/world/#gettime-integer","title":"getTime() -&gt; Integer","text":"<p>Returns the total time since the world was created.</p>"},{"location":"Standard%20Library/Classes/world/#gettimeofday-integer","title":"getTimeOfDay() -&gt; Integer","text":"<p>Returns the time of day.</p>"},{"location":"Standard%20Library/Classes/world/#hasrainblock_pos-blockpos-boolean","title":"hasRain(block_pos: BlockPos) -&gt; Boolean","text":"<p>Returns whether it is raining at <code>block_pos</code>.</p>"},{"location":"Standard%20Library/Classes/world/#isday-boolean","title":"isDay() -&gt; Boolean","text":"<p>Returns whether it is day.</p>"},{"location":"Standard%20Library/Classes/world/#isnight-boolean","title":"isNight() -&gt; Boolean","text":"<p>Returns whether it is night.</p>"},{"location":"Standard%20Library/Classes/world/#israining-boolean","title":"isRaining() -&gt; Boolean","text":"<p>Returns whether it is raining.</p>"},{"location":"Standard%20Library/Classes/world/#isthundering-boolean","title":"isThundering() -&gt; Boolean","text":"<p>Returns whether it is thundering.</p>"},{"location":"Standard%20Library/Classes/world/#getplayers-listplayer","title":"getPlayers() -&gt; List[Player]","text":"<p>Returns the players in the world.</p>"},{"location":"Standard%20Library/Classes/world/#isflat-boolean","title":"isFlat() -&gt; Boolean","text":"<p>Returns whether the world is flat.</p>"},{"location":"Standard%20Library/Classes/world/#issleepingenabled-boolean","title":"isSleepingEnabled() -&gt; Boolean","text":"<p>Returns whether sleeping is enabled.</p>"},{"location":"Standard%20Library/Classes/world/#getseed-integer","title":"getSeed() -&gt; Integer","text":"<p>Returns the seed.</p>"},{"location":"Standard%20Library/Classes/world/#setspawnposspawn_pos-blockpos-null","title":"setSpawnPos(spawn_pos: BlockPos) -&gt; Null","text":"<p>Sets the spawn position to <code>spawn_pos</code>.</p>"},{"location":"Standard%20Library/Classes/world/#settimeofdaytime_of_day-integer-null","title":"setTimeOfDay(time_of_day: Integer) -&gt; Null","text":"<p>Sets the time of day to <code>time_of_day</code>.</p>"},{"location":"Standard%20Library/Classes/world/#placeblockblock_pos-blockpos-block-block-null","title":"placeBlock(block_pos: BlockPos, block: Block) -&gt; Null","text":"<p>Places the block <code>block</code> at <code>block_pos</code>.</p>"},{"location":"Standard%20Library/Constants/end/","title":"end","text":"<p>The end dimension. An instance of World.</p>"},{"location":"Standard%20Library/Constants/gamerules/","title":"gameRules","text":"<p>An instance of GameRules.</p>"},{"location":"Standard%20Library/Constants/nether/","title":"nether","text":"<p>The nether dimension. An instance of World.</p>"},{"location":"Standard%20Library/Constants/overworld/","title":"overworld","text":"<p>The overworld dimension. An instance of World.</p>"},{"location":"Standard%20Library/Constants/pi/","title":"PI","text":"<p>The mathematical constant PI.</p> <p>The type of <code>PI</code> is Float.</p> <p>The value of <code>PI</code> is <code>3.141592653589</code>.</p>"},{"location":"Standard%20Library/Constants/playermanager/","title":"playerManager","text":"<p>An instance of PlayerManager.</p>"},{"location":"Standard%20Library/Constants/server/","title":"server","text":"<p>An instance of MinecraftServer.</p>"},{"location":"Standard%20Library/Enums/difficulties/","title":"Difficulties","text":"<p>This enum stores all difficulties.</p> <ul> <li>EASY</li> <li>NORMAL</li> <li>HARD</li> <li>PEACEFUL</li> </ul>"},{"location":"Standard%20Library/Enums/enum/","title":"Enum","text":"<p>All enums extend this class.</p>"},{"location":"Standard%20Library/Enums/gamemodes/","title":"GameModes","text":"<p>This enum stores all game modes.</p> <ul> <li>SURVIVAL</li> <li>CREATIVE</li> <li>ADVENTURE</li> <li>SPECTATOR</li> </ul>"},{"location":"Standard%20Library/Functions/abs/","title":"abs","text":"<p>Parameters:</p> <ul> <li>value: Number</li> </ul> <p>Return Type: Number</p> <p>Returns the absolute value of <code>value</code>.</p>"},{"location":"Standard%20Library/Functions/base64decode/","title":"base64decode","text":"<p>Parameters:</p> <ul> <li>value: String</li> </ul> <p>Return Type: String</p> <p>Decodes <code>value</code> from base64.</p>"},{"location":"Standard%20Library/Functions/base64encode/","title":"base64encode","text":"<p>Parameters:</p> <ul> <li>value: String</li> </ul> <p>Return Type: String</p> <p>Encodes <code>value</code> to base64.</p>"},{"location":"Standard%20Library/Functions/ceil/","title":"ceil","text":"<p>Parameters:</p> <ul> <li>value: Number</li> </ul> <p>Return Type: Number</p> <p>Returns the rounded number <code>value</code> to the ceiling.</p>"},{"location":"Standard%20Library/Functions/floor/","title":"floor","text":"<p>Parameters:</p> <ul> <li>value: Number</li> </ul> <p>Return Type: Number</p> <p>Returns the rounded number <code>value</code> to the floor.</p>"},{"location":"Standard%20Library/Functions/print/","title":"print","text":"<p>Parameters:</p> <ul> <li>value: Object</li> </ul> <p>Return Type: Null</p> <p>Prints <code>value</code> to the chat.</p>"},{"location":"Standard%20Library/Functions/randomfloat/","title":"randomFloat","text":"<p>Parameters:</p> <ul> <li>min: Float</li> <li>max: Float</li> </ul> <p>Return Type: Float</p> <p>Returns a random float between <code>min</code> and <code>max</code>, inclusive.</p>"},{"location":"Standard%20Library/Functions/randominteger/","title":"randomInteger","text":"<p>Parameters:</p> <ul> <li>min: Integer</li> <li>max: Integer</li> </ul> <p>Return Type: Integer</p> <p>Returns a random integer between <code>min</code> and <code>max</code>, inclusive.</p>"},{"location":"Standard%20Library/Functions/type/","title":"type","text":"<p>Parameters:</p> <ul> <li>value: Object</li> </ul> <p>Return Type: String</p> <p>Returns the type of <code>value</code>.</p>"}]}